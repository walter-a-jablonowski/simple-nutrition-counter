#
# Main key like
# 
# My food S Bio:
#

(main_key):          "(required) Display name like \"My food S Bio\",
                      also used as id, S = short for store if needed (save some space)"

# TASK: improved version for UI
#   
#   sample: true|false (non required)
#   some usage ...

# verification design see advanced tasks (but we might use some json scheme)

removed:             { usage: "hide in UI (unused food), currently no function (just rm in layout)",
                         required: false, type: "bool" }

subType:             { usage: "A food type like 'chickpeas' from data/food_defaults", required: false, type: "string" }
productName:         { usage: "Precise product name", required: false, type: "string" }
vendor:              { usage: "Vendor name",          required: false, type: "string" }
url:                 { usage: "Single or multiple urls, first will be used as primary if multiple",
                         required: false, type: "string|array(string)" }

acceptable:          { usage: "occasionally|less Highlights less good foods in UI",         required: false, type: "string" }
comment:             { usage: "All misc comments (we can use html here)", required: false, type: "string" }
certificates:        { usage: "like { bio: true, vegan: true, oekotest: 1, NutriScore: A, fairtrade: true, misc: see attached }", required: false, type: "obj" }
ingredients:         { usage: "Ingredients that you want to be aware of (html)", required: false, type: "string" }
allergy:             { usage: "Ingredients that may cause allergy",       required: false, type: "string" }
mayContain:          { usage: "Ingredients that may be contained cause of production", required: false, type: "string" }
origin:              { usage: "Country of origin or n/a, if you want to be aware of",  required: false, type: "string" }
packaging:           { usage: "outer contact with food only --> none|cardboard->alu->plastic -> glass & rubber (maybe) <-- inner",
                         required: false, type: "string(array)" }

cookingInstructions: { usage: "We can use html here or multi line using yml syntax", required: false, type: "string" }

price:               { usage: "like 1.00 may be null", required: false, type: "currency" }
weight:              { usage: "like 100g of whole pack in case of pieces, unit g or ml is optional",
                         required: true, type: "float" }
pieces:              { usage: "Number of pieces in a pack (if any)", required: false, type: "int" }
usedAmounts:

  usage: |

    enter fraction, pieces or precise
    
    - default  "1/4", "1/3", 1  * weight            if pieces unset
    -      or  "1/2", 1pc, 2, 3 * (weight / pieces) if pieces set (we can't use 0.5 cause key in SimpleData)
    - or use   10g or 50ml

    consumed as a single piece: use 1

  required: false
  type:     "string"

calories:            { usage: "per 100g or 100ml in grams or ml (depends on weight)", required: true, type: "int" }
nutritionalValues:

  fat:               { required: true,  type: "float" }
  saturatedFat:      { required: false, type: "float" }
  monoUnsaturated:   { usage: "A few foods have that data", required: false, type: "float" }
  polyUnsaturated:   { required: false, type: "float" }
  carbs:             { required: true,  type: "float" }
  sugar:             { required: true,  type: "float" }
  sugarAlcohol:      { required: false, type: "float" }
  fibre:             { required: false, type: "float" }
  amino:             { required: true,  type: "float" }
  salt:              { required: true,  type: "float" }

fattyAcids:          # TASK
carbs:               
aminoAcids:          
vitamins:            
minerals:            { usage: "same unit as in /nutrients", required: false, type: "dict(float)" }
secondary:           { usage: "Secondary plant substances", required: false, type: "dict(float)" }

misc:

  water:             { usage: "", required: false, type: "int" }
  alcohol:           { usage: "", required: false, type: "float" }
  caffeine:          { usage: "", required: false, type: "float" }

sources:             { usage: "like { nutriVal: \"web|pack (information on packaging may differ slightly)\", nutrients: \"...\", price: \"...\" }",
                         required: true }  # TASK
lastUpd:             { usage: "like 2024-02-18, last upd nutritional data",   required: true, type: "date" }
lastPriceUpd:        { usage: "like 2024-02-18", required: false, type: "date" }

prices:              { usage: "list of previous prices like `2024-02-18: PRICE`", required: false, type: "array" }
